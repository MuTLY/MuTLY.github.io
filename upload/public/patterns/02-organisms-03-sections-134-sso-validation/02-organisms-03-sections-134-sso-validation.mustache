&lt;div class=&quot;panel-body&quot;&gt;
  &lt;form id=&quot;demo&quot; method=&quot;post&quot; class=&quot;form-horizontal&quot; action=&quot;&quot;&gt;
    &lt;div class=&quot;form-group&quot;&gt;
      &lt;label for=&quot;firstname&quot; class=&quot;form-label&quot;&gt;First Name&lt;sup class=&quot;required&quot; aria-required=&quot;true&quot;&gt;*&lt;/sup&gt;&lt;/label&gt;
      &lt;input type=&quot;text&quot; class=&quot;form-control&quot; id=&quot;firstname&quot; name=&quot;firstname&quot; placeholder=&quot;First Name&quot; required=&quot;required&quot; aria-required=&quot;true&quot;&gt;
    &lt;/div&gt;
    &lt;div class=&quot;form-group&quot;&gt;
      &lt;label class=&quot;form-label&quot; for=&quot;lastname&quot;&gt;Last name&lt;sup class=&quot;required&quot; aria-required=&quot;true&quot;&gt;*&lt;/sup&gt;&lt;/label&gt;
      &lt;input type=&quot;text&quot; class=&quot;form-control&quot; id=&quot;lastname&quot; name=&quot;lastname&quot; placeholder=&quot;Last name&quot; required=&quot;required&quot; aria-required=&quot;true&quot;&gt;
    &lt;/div&gt;
    &lt;div class=&quot;form-group&quot;&gt;
      &lt;label class=&quot;form-label&quot; for=&quot;username&quot;&gt;Username&lt;sup class=&quot;required&quot; aria-required=&quot;true&quot;&gt;*&lt;/sup&gt;&lt;/label&gt;
      &lt;input type=&quot;text&quot; class=&quot;form-control&quot; id=&quot;username&quot; name=&quot;username&quot; placeholder=&quot;Username&quot; required=&quot;required&quot; aria-required=&quot;true&quot;&gt;
    &lt;/div&gt;
    &lt;div class=&quot;form-group&quot;&gt;
      &lt;label class=&quot;form-label&quot; for=&quot;email&quot;&gt;Email&lt;sup class=&quot;required&quot; aria-required=&quot;true&quot;&gt;*&lt;/sup&gt;&lt;/label&gt;
      &lt;input type=&quot;text&quot; class=&quot;form-control&quot; id=&quot;email&quot; name=&quot;email&quot; placeholder=&quot;Email&quot; required=&quot;required&quot; aria-required=&quot;true&quot;&gt;
    &lt;/div&gt;
    &lt;div class=&quot;form-group&quot;&gt;
      &lt;label for=&quot;dob&quot; class=&quot;form-label&quot;&gt;Date of Birth&lt;sup class=&quot;required&quot; aria-required=&quot;true&quot;&gt;*&lt;/sup&gt;&lt;/label&gt;
      &lt;input id=&quot;dob&quot; name=&quot;dateOfBirth&quot; placeholder=&quot;MM/DD/YYYY&quot; type=&quot;text&quot; class=&quot;form-control&quot; required=&quot;required&quot; value=&quot;&quot; autocomplete=&quot;off&quot; aria-required=&quot;true&quot; aria-invalid=&quot;true&quot; aria-describedby=&quot;dob-error&quot;&gt;
    &lt;/div&gt;
    &lt;div class=&quot;form-group&quot;&gt;
      &lt;label for=&quot;dob2&quot; class=&quot;form-label&quot;&gt;Date of Birth (PRE FILLED SECURITY)&lt;/label&gt;
      &lt;input id=&quot;dob2&quot; name=&quot;dateOfBirth&quot; placeholder=&quot;MM/DD/YYYY&quot; value=&quot;12/18/1979&quot; type=&quot;text&quot; class=&quot;form-control&quot;&gt;
    &lt;/div&gt;
    &lt;div class=&quot;form-group&quot;&gt;
      &lt;label for=&quot;ssn&quot; class=&quot;form-label&quot;&gt;SSN&lt;sup class=&quot;required&quot; aria-required=&quot;true&quot;&gt;*&lt;/sup&gt;&lt;/label&gt;
      &lt;input id=&quot;ssn&quot; name=&quot;ssn&quot; placeholder=&quot;***-**-****&quot; type=&quot;text&quot; class=&quot;form-control&quot; required=&quot;required&quot; value=&quot;&quot; autocomplete=&quot;off&quot; aria-required=&quot;true&quot; aria-invalid=&quot;true&quot; aria-describedby=&quot;ssn-error&quot;&gt;
    &lt;/div&gt;
    &lt;div class=&quot;row&quot;&gt;
      &lt;div class=&quot;col-xs-12 col-sm-6&quot;&gt;
        &lt;div class=&quot;form-group radio&quot;&gt;
          &lt;div class=&quot;col-xs-2&quot;&gt;
            &lt;input type=&quot;radio&quot; id=&quot;yes&quot; name=&quot;device&quot; &gt;
            &lt;label for=&quot;yes&quot;&gt;&lt;span role=&quot;radio&quot;&gt;&lt;/span&gt;&lt;/label&gt;
          &lt;/div&gt;
          &lt;div class=&quot;col-xs-10&quot;&gt;&lt;strong&gt;Yes&lt;/strong&gt;, this is a private device. Make my login easier next time.&lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;col-xs-12 col-sm-6&quot;&gt;
        &lt;div class=&quot;form-group radio&quot;&gt;
          &lt;div class=&quot;col-xs-2&quot;&gt;
            &lt;input type=&quot;radio&quot; id=&quot;no&quot; name=&quot;device&quot; &gt;
            &lt;label for=&quot;no&quot;&gt;&lt;span role=&quot;radio&quot;&gt;&lt;/span&gt;&lt;/label&gt;
          &lt;/div&gt;
          &lt;div class=&quot;col-xs-10&quot;&gt;&lt;strong&gt;No&lt;/strong&gt;, this is a shared or public device. Be sure to ask security questions every time.&lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class=&quot;form-group&quot;&gt;
      &lt;label class=&quot;form-label&quot; for=&quot;password&quot;&gt;Password&lt;sup class=&quot;required&quot; aria-required=&quot;true&quot;&gt;*&lt;/sup&gt;&lt;/label&gt;
      &lt;input type=&quot;password&quot; class=&quot;form-control&quot; id=&quot;password&quot; name=&quot;password&quot; placeholder=&quot;Password&quot; required=&quot;required&quot; aria-required=&quot;true&quot;&gt;
    &lt;/div&gt;
    &lt;div class=&quot;form-group&quot;&gt;
      &lt;label class=&quot;form-label&quot; for=&quot;confirm_password&quot;&gt;Confirm password&lt;sup class=&quot;required&quot; aria-required=&quot;true&quot;&gt;*&lt;/sup&gt;&lt;/label&gt;
      &lt;input type=&quot;password&quot; class=&quot;form-control&quot; id=&quot;confirm_password&quot; name=&quot;confirm_password&quot; placeholder=&quot;Confirm password&quot; required=&quot;required&quot; aria-required=&quot;true&quot;&gt;
    &lt;/div&gt;
    &lt;div class=&quot;form-group&quot;&gt;
      &lt;div class=&quot;checkbox&quot;&gt;
        &lt;input type=&quot;checkbox&quot; id=&quot;agree&quot; name=&quot;agree&quot; value=&quot;agree&quot; /&gt;
        &lt;label for=&quot;agree&quot;&gt;&lt;span role=&quot;checkbox&quot;&gt;&lt;/span&gt; Please agree to our policy&lt;sup class=&quot;required&quot; aria-required=&quot;true&quot;&gt;*&lt;/sup&gt;&lt;/label&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class=&quot;form-group&quot;&gt;
      &lt;button type=&quot;submit&quot; class=&quot;btn btn-primary&quot; name=&quot;signup&quot; value=&quot;Sign up&quot;&gt;Sign up&lt;/button&gt;
    &lt;/div&gt;
  &lt;/form&gt;
&lt;/div&gt;

&lt;!-- JQUERY FORM VALIDATION --&gt; 
{{!&lt;script type=&quot;text/javascript&quot; src=&quot;../../js/plugins/jquery.validate.min.js&quot;&gt;&lt;/script&gt;}}
{{!&lt;script type=&quot;text/javascript&quot; src=&quot;../../js/plugins/jquery.mask.min.js&quot;&gt;&lt;/script&gt;}} 
&lt;script type=&quot;text/javascript&quot;&gt;
$.validator.setDefaults({
    submitHandler: function() {
        // alert for testing.
        alert(&quot;submitted!&quot;);
    }
});

$(document).ready(function() {

    // VALID SSN
    $.validator.addMethod('SocialSecurity',
        function(value) {
            return validSSN(value) || value == &quot;&quot;;
        }, 'Please enter a valid SSN'
    );

    function validSSN(value) {
        var regex = /^([0-6]\d{2}|7[0-6]\d|77[0-2])([ \-]?)(\d{2})\2(\d{4})$/;
        if (!regex.test(value)) {
            return false;
        }
        var temp = value;
        if (value.indexOf(&quot;-&quot;) != -1) {
            temp = (value.split(&quot;-&quot;)).join(&quot;&quot;);
        }
        if (value.indexOf(&quot; &quot;) != -1) {
            temp = (value.split(&quot; &quot;)).join(&quot;&quot;);
        }
        if (temp.substring(0, 3) == &quot;000&quot;) {
            return false;
        }
        if (temp.substring(3, 5) == &quot;00&quot;) {
            return false;
        }
        if (temp.substring(5, 9) == &quot;0000&quot;) {
            return false;
        }
        return true;
    }
    // END VALID SSN


    // CUSTOM METHOD FOR CHECKING AGE
    $.validator.addMethod(&quot;age13&quot;, function(value, element) {
        try {
            if (value != null &amp;&amp; value.length == 10) {
                var parts = value.split(&quot;/&quot;);
                var dob = new Date(parts[2], parts[0] - 1, parts[1]);
                dob.setFullYear(dob.getFullYear() + 13);
                if (new Date() &gt; dob) {
                    return true;
                }
            }
        } catch (err) {}
        return false;
    }, &quot;Please re-enter date of birth, you must be at least 13 years old&quot;);
    // END AGE

    // CUSTOM METHOD TEST DATE FORMAT
    $.validator.addMethod(&quot;dateMMDDYYYY&quot;, function(value, element) {
        try {
            if (value != null &amp;&amp; value.length == 10) {
                var parts = value.split(&quot;/&quot;);
                var dob = new Date(parts[2], parts[0] - 1, parts[1]);
                if (dob.getDate() == parts[1] &amp;&amp; dob.getMonth() == (parts[0] - 1)) {
                    return true;
                }
            }
        } catch (err) {}
        return false;
    }, &quot;Please enter a date in the requested format&quot;);
    // END DATE FORMAT

    // SET MASKS
    $('#dob').mask(&quot;99/99/9999&quot;, {
        placeholder: 'MM/DD/YYYY'
    });
    $('#ssn').mask(&quot;999-99-9999&quot;, {
        placeholder: '999-99-9999'
    });
	// END MASKS

    // FORM VALIDATION
    $(&quot;#demo&quot;).validate({
        rules: {
            firstname: &quot;required&quot;,
            lastname: &quot;required&quot;,
            username: {
                required: true,
                minlength: 2
            },
            password: {
                required: true,
                minlength: 5
            },
            confirm_password: {
                required: true,
                minlength: 5,
                equalTo: &quot;#password&quot;
            },
            email: {
                required: true,
                email: true
            },
            dateOfBirth: {
                required: true,
                date: true,
                dateMMDDYYYY: true,
                age13: true
            },
            ssn: {
                SocialSecurity: true
            },
			device: &quot;required&quot;,
            agree: &quot;required&quot;
        },
        messages: {
            firstname: &quot;Please enter your firstname&quot;,
            lastname: &quot;Please enter your lastname&quot;,
            username: {
                required: &quot;Please enter a username&quot;,
                minlength: &quot;Your username must consist of at least 2 characters&quot;
            },
            password: {
                required: &quot;Please provide a password&quot;,
                minlength: &quot;Your password must be at least 5 characters long&quot;
            },
            confirm_password: {
                required: &quot;Please provide a password&quot;,
                minlength: &quot;Your password must be at least 5 characters long&quot;,
                equalTo: &quot;Please enter the same password as above&quot;
            },
            email: &quot;Please enter a valid email address&quot;,

            dateOfBirth: {
                required: &quot;Please enter a Date of Birth&quot;,
                date: &quot;Please enter a date of birth in the requested format&quot;,
                dateMMDDYYYY: &quot;Please enter a date of birth in the requested format&quot;
            },
            ssn: 'Please enter a social security number.',
            agree: &quot;Please accept our policy&quot;
        },

        errorElement: &quot;span&quot;,
        errorPlacement: function(error, element) {

            element.parents(&quot;.form-group&quot;).addClass(&quot;has-feedback&quot;);

            if (element.prop(&quot;type&quot;) === &quot;checkbox&quot;) {
                error.insertAfter(element.next('label'));
            } else if (element.prop(&quot;type&quot;) === &quot;radio&quot;) {
                error.hide();
            } else {
                error.insertAfter(element);
            }

            // Add the span element, if doesn't exists, and apply the icon classes to it.
            if (!$(element).parents('.form-group').find('span.glyphicon').length) {
                $(&quot;&lt;span role='presentation' class='glyphicon glyphicon-remove form-control-feedback'&gt;&lt;/span&gt;&quot;).insertBefore(element);
            }
        },
        success: function(label, element) {
            // Add the span element, if doesn't exists, and apply the icon classes to it.
            if (!$(element).parents('.form-group').find('span.glyphicon').length) {
                $(&quot;&lt;span role='presentation' class='glyphicon glyphicon-ok form-control-feedback'&gt;&lt;/span&gt;&quot;).insertBefore($(element));
            }
        },
        highlight: function(element, errorClass, validClass) {
            $(element).parents(&quot;.form-group&quot;).addClass(&quot;error&quot;).removeClass(&quot;success&quot;);
            $(element).parents(&quot;.form-group&quot;).find('span.glyphicon').addClass(&quot;glyphicon-remove&quot;).removeClass(&quot;glyphicon-ok&quot;);
        },
        unhighlight: function(element, errorClass, validClass) {
            $(element).parents(&quot;.form-group&quot;).addClass(&quot;success&quot;).removeClass(&quot;error&quot;);
            $(element).parents(&quot;.form-group&quot;).find('span.glyphicon').addClass(&quot;glyphicon-ok&quot;).removeClass(&quot;glyphicon-remove&quot;);
        },
    });
	// END VALIDATION


// REPLACE/HIDE CHARACTERS
function hideDOB(objId) {
    var obj = $(objId)[0];
    var v = obj.value;
    var l = v.length;
    var val = v.substr(6);
    obj.value = '**/**/' + val;
    return true;
}

hideDOB('#dob2');
});



&lt;/script&gt; 
