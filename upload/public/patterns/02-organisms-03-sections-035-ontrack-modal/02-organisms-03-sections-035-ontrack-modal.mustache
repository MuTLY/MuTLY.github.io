&lt;!-- IGNORE EVERYTHING BETWEEN HERE --&gt;
&lt;h2&gt;OnTrack Modals&lt;/h2&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;Add Account&lt;/p&gt;
{{&gt; organisms-ontrack-modal-add-edit-new-account(addAccountManual: true, showModalLink: true, uniqueId: &quot;01_01&quot;, isIra: true, isBalance: true, isBalanceEditable: true, isAccountNumber: true, isOwner: true, isYou: true) }}
{{&gt; organisms-ontrack-modal-add-edit-new-account(addAccountManual: true, showModalLink: true, uniqueId: &quot;01_02&quot;, isTaxable: true, isBalance: true, isBalanceNonEditable: true, isAccountNumber: true, isOwner: true, isYou: true) }}
{{&gt; organisms-ontrack-modal-add-edit-new-account(addAccountManual: true, showModalLink: true, uniqueId: &quot;01_03&quot;, isGeneric: true, isBalance: true, isBalanceNonEditable: true, isAccountNumber: true, isOwner: true, isYou: true) }}
{{&gt; organisms-ontrack-modal-add-edit-new-account(addAccountManual: true, showModalLink: true, uniqueId: &quot;01_04&quot;, isIra: true, isTaxable: true, isGeneric: true, isBalance: true, isBalanceEditable: true, isBalanceNonEditable: true, isAccountNumber: true, isOwner: true, isYou: true) }}
&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;Edit NON-TRS Account (Manual/Yodlee)&lt;/a&gt;&lt;/p&gt;
{{&gt; organisms-ontrack-modal-add-edit-new-account(editAccountManual: true, showModalLink: true, uniqueId: &quot;02_01&quot;, isBalance: true, isBalanceEditable: true, isYou: true, isOwner: true, isAccountNumber: true) }}
{{&gt; organisms-ontrack-modal-add-edit-new-account(editAccountYodlee: true, showModalLink: true, uniqueId: &quot;02_02&quot;, isBalance: true, isBalanceEditable: true, isYourEmployer: true) }}
&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;Edit TRS Account&lt;/a&gt;&lt;/p&gt;
{{&gt; organisms-ontrack-modal-edit-account-trs(showModalLink: true, uniqueId: &quot;02_03&quot;) }}
&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;From U:\DEVELOP\Business Analyst\User Interface Designs\DDOL\OnTrack\Ontrack Re-design_11-30-2015.pptx&lt;/p&gt;
{{&gt; organisms-ontrack-modal-which-modal-sub-to-ma(showModalLink: true) }}
{{&gt; organisms-ontrack-modal-msg-about-sub-to-ma(showModalLink: true) }}
{{&gt; organisms-ontrack-modal-which-account-sub-to-px(showModalLink: true) }}
{{&gt; organisms-ontrack-modal-loading-animation-retirement-outlook(showModalLink: true) }}
{{&gt; organisms-ontrack-modal-which-account-apply-new-investment(showModalLink: true) }}
{{&gt; organisms-ontrack-modal-add-new-account-search-choose-manual(showModalLink: true) }}
{{&gt; organisms-ontrack-modal-add-new-account-3rd-party-sign-in(showModalLink: true) }}
{{&gt; organisms-ontrack-modal-add-new-account-choose-3rd-party(showModalLink: true) }}
&lt;p&gt;&amp;nbsp;&lt;/p&gt;

{{&gt; organisms-ontrack-modal-add-new-income(showModalLink: true) }}
{{&gt; organisms-ontrack-modal-edit-income(showModalLink: true) }}
{{&gt; organisms-ontrack-modal-pension(showModalLink: true, isNonEditable: true) }}
{{&gt; organisms-ontrack-modal-pension(showModalLink: true, isEditable: true) }}
{{&gt; organisms-ontrack-modal-social-security-auto-estimate(showModalLink: true) }}
{{&gt; organisms-ontrack-modal-social-security-manual-user(showModalLink: true) }}
&lt;p&gt;&amp;nbsp;&lt;/p&gt;

{{&gt; organisms-ontrack-modal-add-withdrawal(showModalLink: true) }}
{{&gt; organisms-ontrack-modal-edit-withdrawal(showModalLink: true) }}
&lt;p&gt;&amp;nbsp;&lt;/p&gt;

{{&gt; organisms-ontrack-modal-add-new-account-security-questions(showModalLink: true) }}
&lt;p&gt;&amp;nbsp;&lt;/p&gt;

{{&gt; organisms-ontrack-modal-edit-account-view-holdings-trs(showModalLink: true) }}
{{&gt; organisms-ontrack-modal-edit-account-view-holdings-yodlee(showModalLink: true) }}
&lt;p&gt;&amp;nbsp;&lt;/p&gt;

{{&gt; organisms-ontrack-modal-common-expenses }}
&lt;!-- //IGNORE EVERYTHING BETWEEN HERE --&gt;



&lt;script&gt;
$(document).on('ready', function(){

    // Opens a modal directly thru URL e.g. modal.html#modal-01
    (function autoModal() {
        var modalHash = window.location.hash;
        if (modalHash.indexOf('modal-') !== -1) {
            $(modalHash).modal('show');
        }
    }());

    // Currency --&gt; Double
    function toDouble(value) {
        return Number(value.replace(/[^0-9\.-]+/g, ''));
    }

    // Double --&gt; Currency
    function toCurrency(value) {
        value = value.toString();
        var dollars = value.split('.')[0],
            cents = (value.split('.')[1] || '') + '00';
        dollars = dollars.split('').reverse().join('').replace(/(\d{3}(?!$)(?!-))/g, '$1,').split('').reverse().join('');
        //return dollars + (cents.slice(0,2) !== '00' ? '.' + cents.slice(0,2) : '.00');
        return dollars + (cents.slice(0,2) !== '00' ? '.' + cents.slice(0,2) : '');
    }

    // Manages input = currency
    var $inputCurrency = $('input.currency');
    $inputCurrency.each(function(index, el) {
        var curValue = $(el).val();

        // Normalize values to currency string
        var newValue = toCurrency(toDouble(curValue));
        $(el).val(newValue);

        // Keep a record of normalized data
        $(el).data('current-value', newValue);
    });

    // If data changed, store real data then convert to currency on blur
    $inputCurrency.on('blur', function() {
        var value = $(this).val();

        // Data changed?
        if ($(this).data('current-value') !== value &amp;&amp; value !== '') {
            $(this).val(toCurrency(toDouble(value)));
            $(this).data('current-value', toCurrency(toDouble(value)));
        } else {
            $(this).val($(this).data('current-value'));
        }
    });

    // Account login, simulation
    $('#account-login .btn-login').on('click', function (e) {
        e.preventDefault();

        $(this)
            .hide() // hide login button
            .siblings('.btn-secondary').removeClass('left') // remove float of 'cancel' button
            .parent().addClass('align-center'); // align center for 'cancel' button

        $('#form-login').hide();

        var $spinner = $('#spinner');
        $spinner
            .removeClass('hidden')
            //.css('height', $('#form-login').outerHeight())
            .find('.ontrack-spin')
            .fadeIn();
    });

    // Show results, simulation
    $('#search-button').on('click', function(e) {
        e.preventDefault();
        $('#popular-institutions').hide();
        $('#institutions-search-results')
            .find('#search-results')
            .html('Results for &amp;quot;&lt;strong&gt;'+ $(this).parent().find('#institution-search-field').val() +'&lt;/strong&gt;&amp;quot;');

        $('#institutions-search-results')
            .removeClass('hidden');
    });

    // IRS estimate
    $('#income-type').on('change', function() {
        var $incomeTypeValue = $(this).val(),
            $inputValue = $('#income-amount').val(),
            $irsEstimate = $('#irs-estimate'),
            irsEstimate;

        switch($incomeTypeValue) {
            case &quot;annual&quot;:
            case &quot;annually&quot;:
            case &quot;Annually&quot;:
                irsEstimate = toDouble($inputValue) / 12;
                $irsEstimate.find('span').html(toCurrency(irsEstimate));
            break;

            default:
                irsEstimate = toDouble($inputValue);
                $irsEstimate.find('span').html(toCurrency(irsEstimate));
        }
    });

    // On Window.load
    $(window).on('load', function(){

        // Charts
        (function charts() {
            var colors = [&quot;#AA5AD2&quot;, &quot;#14B7DB&quot;, &quot;#F76230&quot;, &quot;#D0D0D0&quot;, &quot;#20C772&quot;, &quot;#E22739&quot;, &quot;#1E4387&quot;]; // Official Zeplin colors for graphs

            Highcharts.setOptions({
                colors: colors,
                credits: false
            });

            var initialData = [
                ['Stocks', 35],
                ['Bonds', 15],
                ['Cash', 45]
            ];

            var containers = $('.how-are-currently-invested');

            containers.each(function(index, el) {
                var $el = $(el),
                    $riskInput = $el.find('.js-risk-input input[type=radio]'),
                    $riskOutput = $el.find('.js-risk-output input[type=text]'),
                    $allocationGraphC = $el.find('.allocation-graph-container').children(), // need an element with ID attr
                    allocationGraphId = $allocationGraphC.attr('id'),
                    allocationGraphW = $allocationGraphC.actual('width'); // it's hidden, we need jquery.actual

                $(window).off('resize.chart'+index);
                $(window).on('resize.chart'+index, function() {
                    var d = $allocationGraphC.actual('width');
                    chart.setSize(d, d, doAnimation = false);
                });

                var chart = new Highcharts.Chart({
                    series: [{
                        data: initialData
                    }],
                    chart: {
                        renderTo: allocationGraphId,
                        type: 'pie',
                        width: allocationGraphW,
                        height: allocationGraphW,
                        backgroundColor: 'transparent'
                    },
                    tooltip: {
                        backgroundColor: 'rgba(255,255,255,0)',
                        borderWidth: 0,
                        borderRadius: 0,
                        shadow: false,
                        useHTML: true,
                        valueDecimals: 2,
                        percentageDecimals: 2,
                        shared: false,
                        formatter: function() {
                            return '&lt;div class=&quot;chart-point-name&quot;&gt;' + this.point.name +'&lt;/div&gt;&lt;div class=&quot;chart-point-xy&quot;&gt;$'+ toCurrency(this.point.y) +'&lt;/div&gt;';
                        }
                    },
                    title: {
                        text: 'Conservative',
                        align: 'center',
                        verticalAlign: 'middle',
                        useHTML: true,
                        y: 15,
                        x: -5
                    },
                    subtitle: {
                        text: 'Risk Profile',
                        align: 'center',
                        verticalAlign: 'middle',
                        useHTML: true,
                        y: -10,
                        x: -5
                    },
                    plotOptions: {
                        pie: {
                            shadow: false,
                            allowPointSelect: true,
                            startAngle: 360,
                            innerSize: '85%',
                            size: '100%',
                            dataLabels: false,
                            stickyTracking: false,
                            states: {
                                hover: {
                                    enabled: true
                                }
                            }
                        }
                    }
                }, handleRisk);

                function handleRisk() {
                    var riskData = {
                        conservative: {
                            name: 'Conservative',
                            data: [['Stocks', 35],['Bonds', 15],['Cash', 50]]
                        },
                        moderate: {
                            name: 'Moderate',
                            data: [['Stocks', 50],['Bonds', 35],['Cash', 15]]
                        },
                        aggressive: {
                            name: 'Aggressive',
                            data: [['Stocks', 75],['Bonds', 15],['Cash', 10]]
                        },
                        custom: {
                            name: 'Custom',
                            data: [['Stocks', 0],['Bonds', 0],['Cash', 0]]
                        }
                    }

                    $riskInput.on('click', function(e) {
                        var riskPreference = $(this).val().toLowerCase();

                        chart.series[0].setData(riskData[riskPreference].data);
                        chart.setTitle({
                            text: riskData[riskPreference].name,
                            align: 'center',
                            verticalAlign: 'middle',
                            useHTML: true,
                            y: 15,
                            x: -1
                        });

                        $riskOutput.each(function(i,el) {
                            var value = riskData[riskPreference].data[i][1];
                            $(el).val(value);
                        });
                    });
                };
            });
        }());

    }); // end On Window.load
});
&lt;/script&gt;
